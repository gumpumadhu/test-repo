apiVersion: v1
data:
  WORKLOAD_ID: 2ln3ook
kind: ConfigMap
metadata:
  labels:
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: 2ln3ook
  name: 2ln3ook-test-cntai-1140470743
  namespace: vault-ns

---
apiVersion: v1
data: {}
kind: Secret
metadata:
  annotations:
    rafay.dev/secretstore: rkms-secrets
  labels:
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: 2ln3ook
  name: 2ln3ook-test-cntai-1140470743
  namespace: vault-ns

---
apiVersion: v1
data:
  tls.crt: 
  tls.key: c2VjcmV0c3RvcmU6cmttczovWVExd0NhaEhlMTIxY1ZhREh0ODZiZHdwelliOU1IUVlNN2RGYmZNYTVIT3Z4cVRyZHE0ZThhK3A2UFlFUCs5WW5oUVVZUFQyZVZCQXdCMGpTSGtzNEdnSUM2U2s4SlJrM2F6cmdGRldEV3dtbjNWK3VmOFMwSXpJL1Y1cDd6enpEUmlMVk52WEh3WnhCMXZvQjR2dTM0M3BxQmtiK2pUUWdZWDlzVyt5QkhwU3F1VFljd2hhMFZ4byswcW5rdjRyZXVST2FJUDJoMnZjbWZNeDNObGtOandWQkc3NnppdzlJTzlJVU11blJJcm9WQ0FBTG9aeHppbnlRenpWRWVpdDA1TXVTd1pzSzY4NE1FWDhUYXgyV1BOMldobXJmdURqdldVdDFycmRvamdGYjBXdGhIbzR2aHFtRU1QYnFWUGhjNHREQVVTUlhrWExWWXNONm9XTU1Db1FrT1VpcHA5dkhwSTk1ZTNhZ01zcXIxMHZRV3FwSWQzeSttMzVGWU1mdG1WQXNkRDBub1o2a1F5elJrWEF3ZHhkT0xlZEhLYnFQaVR2YUNJM3pRRWZVU3ZPM3FEdmFWTDVOdFQ3aDM1S2IrVm9QYVBLWHpDVlU4Q2RTaVhCNkJXL0cvd1c1ZjMrNEFlVFZGcWZQTTU1dGhWVk85SGhaNjVCZGRreUVnUTg5VDZrWVhCS1JhR3dTVzZVdHE2QzlzRmlEZU1SYmt3a1BqS1BEMVN1aTgyWDJuaWI5OEZPU1M0c2M1NVVqQzlUWVJyRFZxU1ZOWWZGaVBhRlJOU2tTSE95TW4xZXpmdkROdWJCZHp4S2lQSUxFWjRzTTlKZ2VEUUVsdXJPQWsxeEhkZFBnc2ZaSTRXUFVBUlVyVllQL3prU3hObld0Q1h1YVRwN2xHeENWVml6ZTdHQXNDcXdJUWkrcXUvL2d6T1E4VWtJeHZPc1VhZlY3Y1dHRFRMRzR3S0NvUDA2a3lpcEpSMDhjTWIyOU4zMWNic2xoNUJUVHA1M2tETmdHaFgydWZWUDdYY1NBT0FtUTczTlBSNEg2ZXBTbkx6bzdhMkN6OXpzUnc1NnNBT3B0YjVpMDhodXFIMzIxcWJjRmpBckRSWnk0dWE1V0NERXpINkR2RUNoSGtLTnZSaTVwdkVQMi9oRUxQS2ZiOEd1V2JYOTNUZkJvKzZiVjZaeXEvYno1ajZkNDFYQzh0aWZzN0hiaTVMRWpEMHRuODRTbk9jUWtxa21kWjl2Ymgzc2xjZFp4cS9VMmhueWpNOVJGczZ4TDltTERDSU1LQ3htU2cxT0F0QUU3eVpYRG1UWGFFcTE4QlRkN0lmQ3MyZjdETnRzT29NY1VGelpwWWszbS9tUW1yMTFOOFpwTEJXSE1MeTFna3l2b2VUL0tTd1J5MW9hZ0JOWVBMaEVQS05uMW12RXFNVXFKaWRjODhTZFF5TVlnQVFmYjNoSGE2c3hsaXZKenBLVUo3WTZXWFBhOFMxWlcxK0p4TmFBWlBCMVExNlkzWVBHdHNNcHNwaVFJTTNHMzNaUEh5V1NLcWhEYnhHOGE0ZmFidmZUVHpKRis4bEY1U0Y1NFFwRWQ3dHVwbjBGL24wV09wWWV1KzgzaTlRdlFrYmZVY25aRzVVaXNxNXloNW5nVWV5VlN0eXBXWE9leXoyTzIzWDRLUllNUFVKYjBNNjBMYktNWVc4NlFteEFJbjVvYnprMTUrcXRCQ1pTdjhIKzZRTlhtOEU0ZFBiaXpGeHRJQVBHV29xQ0dKd01PTzh5bFAwS3RaV0RxS3I5bnUxZWRTelIrcEk0M2puTUltRHFJQVpFempWMldqK290aVcrdmdBWWpTMVFOd3hIT3VBR1JzQ3dmczduWlZ4RXRNb1E4SEtJejVYZFlSZWNTTTV2ajhiUlRPUnNRUnJEaXZ3R29Nd21nNDl0Y0x6aVBnZDY3cGU4c3huMS9IM1lpR2hEV2hpUHN6WEdWekVvTnNDL0xQZmdxRE9hWjBZNVRlc0dnRXJaQ2V1SVhJelBzUFFJRWVocE15RUNvOGtZcUZRT2Z3NEhvTlFrV0w2QzJ6eElBYU9qeEx0Mml1Z0w2UzhCYURkaHdYWW1xb2xtUlVEUnA2cWFoR25CVEptWUZXMnM0WWVzQXprc20rUkJZallxRVdSTjRRZVlhSG9Mb0Nrb2oxS0dMNDRwS0Z2d0FKcjhRT0dLYzc1ZDQ2dHlad0ZMcTdSWkhIN3orNjhXMGNaYmNPVXl3SUdTZTcvNG5iQWdqSGZQNkJUUjZqTFdOdkpKeFowZG4vV0QrUjBkaldOcENwTWRIU2t5S0U1ZzlkQ2x5bjArZDNHRi81SEZ4SDVCLzdqMHBsZ3JkOFAydXBsNm5SelYzS0I2OS9UYWxXOXlUV2ZRT3NuTDhBZGE0SHowQU1FcUxyNTBxb0E5L0pVaWpwc2R3SHVGek5BNTFjeXd1RC80TUJjM2s0L2JvUmI3ZFNiclcwVkE3QVo0QUo0dzZCK1UwZm9RQTNQbUhwemlqZFZKNlZaSVdhYUFSYkU0L2t5TUhBQjl0RUJER0VLYWg1VS96V2VYNlRrdmJaL0ZQMk5hdG1wdks2NmtyZkRyVzY0bDFkSjNTbzR4N3I3b3RnNEpuSFJsRWZKYXdxRGJHdkNlK3pMS01kMTJiTlhBTTM5ZlRrRTVXZ1RYMTdoYyszMmkwVnA1SXN4U1JuMlR0UkJCYko0ZXBNY3lIWnV2KytuazA4V1gwWTJ3L2NNenhqVmxZOG9QTHBQd2EwcXNRSVNUSHBCRUtaQk5zazFSeE1icS82MjM4UG5CQ05VYlpFTUNIM2hsTzJLUDhYbUlVRTFGNDI0TXBwY2FndHNhSXZRU3NGNDZXVEpqeWxMTE50RnBsZUlSOG9aYm1vem8rREJLVUFJUms0aEprZGdrTC9rRFJWTjB3a0EzRm4wbGp3ZUdHS2hsdkFPV1grYnc3azIxZ0t4ZWNvSXpseCtOeC9USUNMZTJWS0FuUDdXMWlTSytkN0IrVHl6RE9IR2RHN2VFODBDekN1WG9RN29LTzRubmRZV1ZSZWFBRmxlZGFOS09Raktsa1VDc2Y0MmNMU0xMTXhEVkcrcmtzUzVHTThWZDV3UVdZU2gzdG9xdmlPWHVRbmxpWjFiOUM0S09YZEdaREVyKzNXTWFJbGhabXkzanFHQW4rYzFvWXdQZjFzZmx5UHp5amVKaVBxSXhwK1ZkRGQxZ1ZERHZ0ZmYwSmZJYUIwSHNFdk8zaWxEeUV4T1VJVXZ0OEhmc2lPNjkydUM4SC85YWI3UWpXSXljdmc1VSt5Znp3VkdJQk5mU0Fzc0EraFBKVUFYUjYvMkRKZUl4UStGenROd3p3aXhnNkdxWjN3eWJuMmFrcVlwYjF4WWhJdTJHTzdrTEJydGI1NzAzTDVDekx0V25YWjBjd1JNYi8wY003TjU2bjNKVzdiQkkwNXJrRG1CL2Vub3hWRVg4S084ODhqTnM0L1pSN0JJOFg1TE9RTm9xR2pNek56eUdJTHoyMldwdTgyR2NxR2g3TVNTOUF6eVVhZUp3OTJBYnRtM0pQUEt2OVpVV0lESzJzSTYwcnR5bk5yUzN3dVJadnZvaVlFQVVRckd1R200eDNUTmZWZmUwTG4wMXhnbkM3ZnBsQ3BwU2VhUmx4OWFrM3pTVWdBeEJYN2RBNnlTaWlFQkxhNExwdGlxZ2kvVnZ4Z2ZPcElManY3bUtUZEtiOGw0YUV2WkZibjdnQkRzODY1OHQ5WnFZMEt3bjZXTzMzZGdxdmR5RUtlQVRsYS9yejJDeHhPVTY5ZHlPZlJQOThGUmsyOWgyUzU5bTY4dWRlUTAvM29OMVVldTJDRElmbk5MQXZVK0FPanN3RzFZU3RPSlltdkJaWHRuVzhxcHkySGI4eFpId21nS3ZpaEtwNjQ2QW8vKzhJZzVwVit2S0RzQzdNRWpNeUVrdkVHYWdBRVVUY2NMQzJPNjdoN21vb1JJVmJQS1dzOUNOSk85YTJPRUlCRDBRcGdHcE03emQxSFk3cThKbnRoWGw1L3FTRWJRa1NQczJtTnkvOVFBbjU2Smlmb0htenJtQTdBR09hRGxUcHNzYnBGV0VGVTJjaFY3WlphSnNLZCtHTEw1ZzJ5ak8rbmdLNWtWWW5mR1hwcDArK1JDY042RjFCdDg0OW0ydmlZUEg0aTl2cWlLMUpVcjZUc09rbVkxWkV6SlNpWTUweEhQK3ZxV1NhSloxY3NnV1RsZ0NuanZsNENGWHltVDhsd3hXcC93b0dBaGt1d05OU2ZVVU1qUE54Z3d3b1NEL3I3QjROd0xyMG9VbS9SemlNend5aWZhSG9ITlZwSzdEUk9icGRWZk0vT3g0c1BtWUVBb1F1dDBoZGY3eVB6c3dYM1BEUEZCbCtuR2NEUTJPQUhZdVlXOWhDQzFaa0d1NmpsdjFqeTdQWWIwak02Rk9CaXd0U2xPRFNyQ3JrdFJJditHVXRUeUhRM1FTWHJ1c01Tek5vakhsK2YxYTNDNjE5ZmhlK0xhRFdOY3ZBbFE0ZlA3TEhBalM4bDlaU0ZsMWwvK0hZeTkwM05PSUt0WS9rVjRmYWR6TWlhYkp5enJjRVRTc0lYMmtQS2VYK2hxazlDNU5ZNmFadS9kZTB0MlI3M0RQVnpES1AyWllpZXN1QkN2R1FSZHpIZk1mNFJaOGRDQ3FCM2RHRnBVeE1waGFtZGdsVEFtUm1taHZOSUxRTGFraXVQcjRMZUx5dE5US1FBK05jd2x5RWRmd3JKSW0xenI1eFhyWGlpaXNTSzNjVmd3NUp4MVpKaThIN05KMWZKdGp6TjMxY3d3U1I2L2Z1d0Z0VEhMbFFZL2RKY28xT3hsWjU3ZktiV3FqdTlVYzhjRnpSNFJRZzlzbURIblNaK3poNHprZlFHOWczdEgvRWw1R1JWbjM1ZXVYai9nTmtDSjA3U0NveGxPTzF4cXZKQWMwcEpsVFBzTU0vOThmTTloanRDSUFVMHNrTlpsQy9tNkIxdkNwS1k2d0hYWXk1cVptT3BjMUhoQlBkWlZjS2tqT0RGbWMvWWp5VTFtSXRMd3RHQytXbWFXMXRtUFIvVHF5N2lOQjdYbGlEeW94cGFzdzVUSzhUdlRkNGh4N01ZUC9yWmQ4WEJsR0ZjYzVVdXRzZG1MSEpQWlpwQlZOYmVBU01WMW1vMGN2K3g2MmIvdWxvVXp0RGFXSzJRMmVDQm1YK1V6Rk1xa0JJejc4R1Rwbm11a1g5QlpCZUphdXIwcHVYNU8za29ueHhKV2ZPTjNMWTBQYms5TjdPNy9WdEVtaHB6TlBwMVJOOUloZFRFOXl3Q2tTQWtacERVNWpoeVI3WncyeTRFN3E1U3M3RkpMUlFPN0J5WGlvcVZjVmZqZjZNNFlIOWJUdHJqeDBVb0hrTmRBcGw5NjMvMEV1MXVDZUpGRExkaFgrNU4rV1k5STM4RTJRTDdiZjQwTmdQaHh0WkoxUDVVNmhaL2Nkb0dBR2x6SUduTEErZWhqaFEyaWJ1YmNtUDZhejNhRGtkWlA4VE1GQnU1cklLMGtib2toQU9uUlNhVFRxVnRobGlhNVg1bHN5V0FidDVOQWFGSWh1dDQwWklMdGNWck1UbHZ5V0dpMDJNYTV5RWRDWmtzTkVpRzZoeUpxZXBHYTJ0V1dwVlNRbnRkZ0NlZkUvMEZwUmFPRW9kZ09UNGkxRGxzOTJVNlZQNHhwQitDTERleU55WnhDSVZTNFRLcTRPOXovVlZPaTZpNVY0VVJBZWk4S1hrb3RnblhQN0lxclJNV2pab29vOEE9PQ==
kind: Secret
metadata:
  annotations:
    rafay.dev/secretstore: rkms-secrets
  labels:
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: 2ln3ook
  name: 2ln3ook-testing-va-818612492-ingress
  namespace: vault-ns
type: kubernetes.io/tls

---
apiVersion: v1
kind: Service
metadata:
  labels:
    rep-container: 2ln3ook-test-cntainer-file-wz
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: 2ln3ook
  name: test-cntainer-file-wz
  namespace: vault-ns
spec:
  ports:
  - name: port-80-tcp
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    rep-app: test-cntainer-file-wz
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    rafay.dev/registry-2d93dlk: system-default-registry
  labels:
    rep-app: test-cntainer-file-wz
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-workload: 2ln3ook
  name: test-cntainer-file-wz
  namespace: vault-ns
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 300
  selector:
    matchLabels:
      rep-app: test-cntainer-file-wz
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        rafay.dev/secretstore: vault
        vault.secretstore.rafay.dev/filesecret-config-test-file: '{"containers": ["test-cntainer-file-wz"],
          "vaultSecretRef": "kv/data/myapp#data.githubtoken", "secretFileName": "test-file",
          "volumeMountPath": "/home"}'
        vault.secretstore.rafay.dev/role: default
      labels:
        rep-app: test-cntainer-file-wz
        rep-organization: g29xn20
        rep-partner: rx28oml
        rep-workload: 2ln3ook
    spec:
      containers:
      - args: []
        command: []
        env: []
        envFrom: []
        image: rcr.stage.rafay-edge.net/rafaycommunity/rafaycommunityuser/testapp:v2.0
        imagePullPolicy: IfNotPresent
        name: test-cntainer-file-wz
        ports:
        - containerPort: 80
          name: port-80-tcp
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 1024Mi
          requests:
            cpu: 237m
            memory: 972Mi
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      tolerations: []

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: 2ln3ook
  name: test-cntainer-file-wz
  namespace: vault-ns
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-cntainer-file-wz

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/configuration-snippet: set $workload_name "vault-access-wz-file";set
      $workloadId "2ln3ook";set $orgId "g29xn20";set $partnerId "rx28oml";
    rafay.dev/dns: 'true'
    rafay.dev/kubeVersionConstraint: '>=1.19.0'
  name: 2ln3ook-testing-vault-access-wz-file-http
  namespace: vault-ns
spec:
  rules:
  - host: testing-vault-access-wz-file.run.stage.rafay-edge.net
    http:
      paths:
      - backend:
          service:
            name: test-cntainer-file-wz
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - testing-vault-access-wz-file.run.stage.rafay-edge.net
    secretName: 2ln3ook-testing-va-818612492-ingress

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/configuration-snippet: set $workload_name "vault-access-wz-file";set
      $workloadId "2ln3ook";set $orgId "g29xn20";set $partnerId "rx28oml";
    rafay.dev/dns: 'true'
    rafay.dev/kubeVersionConstraint: <1.19.0
  name: 2ln3ook-testing-vault-access-wz-file-http
  namespace: vault-ns
spec:
  rules:
  - host: testing-vault-access-wz-file.run.stage.rafay-edge.net
    http:
      paths:
      - backend:
          serviceName: test-cntainer-file-wz
          servicePort: 80
        path: /
  tls:
  - hosts:
    - testing-vault-access-wz-file.run.stage.rafay-edge.net
    secretName: 2ln3ook-testing-va-818612492-ingress
