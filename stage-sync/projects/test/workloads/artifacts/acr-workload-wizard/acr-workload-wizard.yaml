apiVersion: v1
data:
  tls.crt: 
  tls.key: c2VjcmV0c3RvcmU6cmttczowOFBUcHBNMHVld09FMEZhVDdvWVZLVGxsbXBZeW05RHFFQjR3Ry9IRmZCTG5PYUdZZ0VmVWtqQUQ0bXB2NWxZeTRsaldFS1BEdVBXTXJYbFViTC9zUjRkV211VVdlSnU3bjBvYTNrQVBoaGJrN3F6Yi9uQmQ2SmljODQ2eVM0NkFRSEpiQmY2b1ZlcHFvQVhPV1RsNW1JejVuN0V1a2M1OFhGNEp6K0pzVE1rWlRGcDdHeU8wQndFbUdaTEZDWlV2Qmo1TnM4UjJxdlM3eEx5SmxCZ3U3NzFKeXpvTkJ5dWpRWUltby9wU2FyV3VZUGFpZE83cFlRcmNmV0tRcXF4b1N3MFBDU1RyYWpCZnBmVjlMZEFLVklEc0lNZ2VjLzlzblNRbmk4ZnpKZ28vNWpMYU5SODhpdStyWDVkSXNoblBqMHFZdjZWTURnNFAzWW5FN1VyQWhwQTZ2WHIyK2JSZFFic0U1Z3VZNCtBT3ZGdkxYMk1SMGppMnI1a0VBRHBNaVk1MndPZXkyQ285THJkdHE2OFFUVzFGRWZSc0hraHZkVTdQNndpK0ZReWV2eWxKSXk1NEJ3a3ZsZEswek5WUEprV3h3S3lwWlhQV1F3dzVMRmFydWJyWDNJMmJvMjA4UGl4eWdBMFBnMlo3WjJRREhUeWdCZjFGTEZMVXVTdGU4UFAvalQ3M3pHamQvVThaZVRrajRBdUY1M2I1ak44M2REMWt6NDBHbXc3bXdYSFRiTUU4a3RVRUZYQnAvNU5zWlRlUHRSM0s3SU41cmd6VnhHa2EyajY4b1JpN05GQnhMZmxxS0UzMGtCZVptcWtwLy9kcUVLOUliNkcrREVhZGV5Nmw2RWZlUWRDeFI0RnFoQ3hwc2RFNFgzQldRajJIOXdjZlROYktPSWdaSTVXTVAyTVZDRnhkTHJuMnQ1eVc1Sy9ZQTFQanRsZHZLQUlWc0hvcVJIMzhkeVNmYTFZTjhUUVBMaWlyK3VkRUxBaktpTTVQS1l0b1BRblFjMEJNdVBMMFlHN0hLOXI3OXJPWUhaaHN5bVN2K3NQN3ozbEhtSlJIMnQyM3BZL3hnYUhXZitST3AvSXd3b2diRUNTekJBSS84bWhHeWhaNEh6dEZ5aHhxRk9IMmh2RGc0eDF3NzI0OU9lb0QwMFVMeExFdmEwOHVyemRpL2Nkd1JYK0J4QmxJZWhwck8vZ3JPYUZqY1lraHVIbzhIZjFzaTNsdlhxQzJocDhiVC9pbmUxUmZMQkJmVHZwZXNTa2F3UHNSVTFWMG1Zb1VBNVlQelUxRjgxaWljRmFOaTI2MlRYUW1HRGluV0RoOE9sTGR4OWRES2Z6eUJkbTFNK3NjaC94aGEzcjZVWXJBb0tZL0JmOE5MbWNLSnZRL21Na1RmY1RTZTlaYXVUK29HdGM4SHZzWVBBdTRrVHNUY1dXVXR5d004Q2phUXNoZ3hHclB4bWRFblZ2eis5N0lqYXFneVhTSVFsYWlMdlpaZ241TFVMNnllRTFCTm16L05zMkVzMzdiVU9BbGNaQmNOYmd0WUgvakRoSC9tR0NoeWZIMXBJOGE1S3FYcjNJS3BZdkZYdExtdklYYkpnT0I3Uk5ud3NlaEVlN2lGN0xvb0FrMnYwRzF2TGc0VW8xOHMwZllSZEVrV0JJUTQrU0pEdFpxKzRJUmhQY25YbXlybHQ0UjdKcFYxZDBBejEzWVY0OGdvSHJ3SFBmQ3BvSW5BajMrVHEweVhwcjBPWmU2dWlDR3ZqOFFpbUh3NjUvTXlFMGl0UzNwTk41dkJoTjgwWXZycm1jeElaNjhqQWwyRmpMc1FEUGZtWElNeWNySWJrRFNRallIaHRnL2xCajNDZ0IxRXVlcXAwVVJtTmEvYjNaaGxPbjRqU0NYdncxYnVmT1JMV0liNndnbk13SGF3QXFmVWVtYUZqZXRxajkvQzBiTHZ1STMvTTN5U3JObzR6UDdSanpiRkNoME9QUXpBa2EraWFhZUpHQzRnaWRNTXVPcmV6ajRzRWcvUkJ3L0szVkNnc0xEVmZlaTlxRzRmNkVaUGlSODBIVHM3a25jUFNlcG9oRGU2T01jSVRoMlErSlJkdkk4MW5wZW9YVWFlSkd5TTlmOUdvNWxicXZ1dWxodFJtbGVrZEhhd2dQdFFHT3Fkcnc4RkxBY3lUaEJoMTFSRElIK3pObGJWZmZ2bkc3TGFvTUpRWkxUNnBBSG1EVjF4QUYzNjhOckRGK2JJSFd1eGYzWTZqS3RiVXYzemE3SGhmVU9uRmltRnNTdlROazZnUVg0enE2WEtsY3Vkb2VBQ1cyK3NyeUxZd2h1R1Q3bGtCQ1V4UDIxMkpVL0E3OGZJOXEzaFV0SVRRY0l0cE13ajJrQWpwRUFsYm9PU0pJZ2Nqbm92eTRUREUvNWxsSjh5VUZJRmdNRU9VS1Z3WFY0cXZ0QTZKTGdFU0NXYkVEU2JIbzdIUXRmV1lOTVRydHVPVEN5Z1pJbVZJMjdwdEpoZTNwOSt0N1dGaXZNUUM1VE9zUWd5WitqK3RKOXhUWVlqTERvZ0lSbC9rUlh0Y2N4cnpEU01CTEZXeVUyaENIanlTa09OdHBHTFpIQ0FLZ2tKWDVGc05vUXYwR1Y1R2s3eW9ISGNuWnVPNFhaTS96TzFVNC9xNVBpOTRlb0krMUxQSmpONHJyb3RsMk5LcTV0aDA5TVF4SDQ2NWJ0Q0d2YktTUUdmZjIzMzBicUdUN3psckxCYUNyK2hJeXk5TXdzZnpYYTBaa29DcXJVMVZSTlY0K0tqZVRpNDV4NVFKakhWWmZjYkppME0vY1J6cEtmbGNzRGxKWjdLVU9SOVFGYkQzc2lyOEdISzBIQnFrWERReGlLY0dDS3NJQVRqMWZJWnVLUUNUN0Qyb3JqSGRrZC9DMVplUERBeHpkOEpROW9HL0FwVklodGU3cWZlTjZOZXA2QzZ5Q3BETzJla09oZ09ISGR1dzlZSlU3ZGVFSHFWeWRicURCNzJ0QXJxSlZJeFZLRU9mdWl3RTNuTzh6dmRLRVowU3VPSG1uQmgrNmViTmF0bUlPeFBrRHc2ek54TXpialB6cXRHdUIrL1F6aFl2Vk5tS251R0R2MXBVZElOM1llbTNOZy9jQlFjNHJWZTVuREpiVWpsdEFwVjQrWHdFV3RodHBqRmxLVlQwSGhiVFhtbGphQjJVU2xRdzh6cXUwUG1kRjNLRlQvQmFLZnF0dnlNamxQNDBUOEN6bitndW1FOG1YT0thNll4UWp3UkF6a0F1WGlOY0ZDNXBCLzBSQ3FJRGxkSmZVTGtBMWdnZWN0NDErRXQ3N1N6UENBMEVCMDhJNkt2YllqNlVQd2hXd2xwL0FYWHFIWVdJQ3hoWHNVMzRoNmdtNk9kejdwMUV4N094NWEyeEdRd1VCMCtQY3pVY3JqSm9INmxXS0lXcXFIWHBzZVRoUXo4NEYvMjlkTitmWUF4RFVhWGNmQi9hNGhPK2tkMlhudWhTcWs0Z093NnNjRm9vcEtqdTBNc2Y2bUh0YmFXSUZMNEVwc1YrR0F0NDBOcXlGbWR1TFZlaDRvZXdaV0hibFM4YzVXMmJIcTdvbFhmalZ6WmZGWnFUMVZvT0RWTkliTDBwNkJCMHNSVmcxbEx1b2ZjanBSTFJOSVFrbTJPY1dXVnlxd1l1T1h5Ynh6cHEzWjg3RlM0SUpFMnRuNjltVmtFT1I4R0U2SlcrakZrRnliRUk2eVFaTHdWNUVGd0ZUakkrbHdDTzlKN3ZsYnNOb1hRZU84TS85bU41VHlVVUNKdUpzTlBVMVk0bGk1emxOckR5bXlQdXpJWnhvcW1zVVRKNFNzc0s4L0dLRVAwRXFuRVZqRTBhREFNT1p1aGUwTno0anBicXlSTlZBS2Jnd1hvcHg3ajlJbjIzTUtFK1ZoN2EzVVBVVXNlbWc5dlZWK0gzVmIzYlZ0SUhWUWdreEtoQ2lpU0s1MHV1dHo2RTR3WThSc0FUMkNzZlhzeVZQbWJQT0tHc3p3aHF5TTEzNDFZOUd1VExESnlnc2NJdDhrblAvS251UjhvMm5KOTRQaVRqeWNMYXVJK1FkekJLU2Vvb08yZGYzSUVFdEFqZk92aUg5MXYxWVJkVDVhMW4yaDRSUFhHNWpqOHhyRXlIak13cnpDV0xZajJ1TG9VVjdrOWV0Sk9GSkxNZTNWa3c3TS9tY2dmSFliRWQ5QUFIVElrWmUvL3FRTnMvMGJ5RjBwb0Rody82ZUQzS2VhdktQd0lYaFRpTWRpWmNQNVgvTmJJS0xYVFhwSWk4Y1RTRE5rbmhud25OeFpUcHRla2p3c0MzLzh1Njltc3pzN2ZoblVsU2hHaTUwOE9IRjRkVWJkcVZLMzFxTXpwdWFYanhBK243Rkw5NDE5TWxOUitlcGlZbEVkcHBMQW5ESkZHQ3ZYSzJGelpJV21YamhRejBWcElFOEwya1dZWXIxczM0Qi9VMWxuclBlMDFZOWpXQVliMzdSWVdTblNtVExWWFVVVHJxeHgxWWFWMmRSSFRqUW5QSVExRXh6V1kwaXAyTnNBUktDbzdUbGg4amV1cGFyWlcwR29OdVNTUFZJZjVyNEZkOUhZdGRRcnpJMXE2RnJ4QzhadzFBaHlWa05HYU1yZ2FHSnV1eUNiVXhFM2lFL2pFek5MTjN0MFRrcWY4N2E0d1dVSkV3SXRhOEV0VG9vZFk5bXRuY2FjM2ZJR2V6cXRIYUZodUhQSmxISzlNQ2FPZ0dWdkR2Uk9qQXJIUkhmN25qMDNSSHJWWVV5WFAxSy9XQU9jVHU0bklxY2IyRkVZeGEwN1p4ZWFTTTY0T2ZWWG9BK1A5TVA0WHZpc1VyUXQvQmF1NGg5Qnhla0h3bGIreU9qMUhEaTMwWVJJbXBiQVloOXhLVG9wZzkzdWNuNitpNk1WNkV0ZklnQnZYWUhGem4rbzRUYnh3eGRBMjZqdDBKZzI3U3p4L0tpYy95ZzlZWWVYcW9TZ1lrWHloeGUrUDNKTnpxUHJyUXVvMnFtS3FUSE96eE9WWFNjZUg2L2lic1BqM0RrditMUWwycG9xK2J2T25ydmxnN0hOdGxHSEJ6YlZNZWlqckdyWW5zRGMwUjJkTlRHREwrMHJnSTNCb2N4RWlrT0VpRlpnQzJzL3VkM3U3U2d0RWt2UVY4TlhwOHVJQ1JNM014bUpKRlR1UGNwbUFVTStRaUJmR21xaHR1OVNoVFJaSStJclp6M0luQStmVlR1ZmhscEJubG9hWWJrbGlRaG5Xei9FYlVUbU5CM1d6MUNISFNjK3c2ZGVIaFRnbml5bnUvZkJJSmZnaWZKd3Z0QnBKdmJOU21vMHliWS95eW5LMjhTbjdBbG1yaHNrUmw2OGgyQjg2eXliUU5GejJtcmZHdzU4QWhIUGlBTEdHZTVmYVVqTHdCNFJFcUpodWFCa0w5K2RnSmIxTGJROUtXS3c1ZWo1U0RlRWFOQ2NNdGQwOGtkNW1pbTA5VTU4KzZvNVZwNndqSHhzSTdjclNTNDVSTEcrWk1rYzBTNmJteFJOT20ySENPZ3FEWUlCWVV3TWloZnREcUNobnpEdTRJOUM5d1dWWUhoRVFXY0g3Rlc2VFFQaTA1cmI3R2VFUG1weFp2Nlp4ZE14cGtKUHR5cHgydFBpbk9BTEI5bzlmNXVEYWNTMjlTSi9GZUFxQTNDL3BDRnlRZEx0ZWQ0TFZVanVBbzJSeE5PRVppdWJUbXlBcXNQSmJlNklKb0xSQUVFRG1DMWRwekVPTWdsRWVpUlZ2MmI5UjJ2Skk3SURieEYwTmwyb1E9PQ==
kind: Secret
metadata:
  annotations:
    rafay.dev/secretstore: rkms-secrets
  labels:
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: mx4rv0k
  name: mx4rv0k-new-worklo-4145937496-ingress
  namespace: new-ns
type: kubernetes.io/tls

---
apiVersion: v1
kind: Service
metadata:
  labels:
    rep-container: mx4rv0k-new-deploy
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: mx4rv0k
  name: new-deploy
  namespace: new-ns
spec:
  ports:
  - name: port-80-tcp
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    rep-app: new-deploy
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    rafay.dev/registry-m185xrk: gajanan-acr
  labels:
    rep-app: new-deploy
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-workload: mx4rv0k
  name: new-deploy
  namespace: new-ns
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 300
  selector:
    matchLabels:
      rep-app: new-deploy
  strategy:
    type: Recreate
  template:
    metadata:
      annotations: {}
      labels:
        rep-app: new-deploy
        rep-organization: g29xn20
        rep-partner: rx28oml
        rep-workload: mx4rv0k
    spec:
      containers:
      - args: []
        command: []
        env: []
        envFrom: []
        image: gajanantest.azurecr.io/hello-openshift:latest
        imagePullPolicy: IfNotPresent
        name: new-deploy
        ports:
        - containerPort: 80
          name: port-80-tcp
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 1024Mi
          requests:
            cpu: 237m
            memory: 972Mi
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      tolerations: []

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: mx4rv0k
  name: new-deploy
  namespace: new-ns
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: new-deploy

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/configuration-snippet: set $workload_name "acr-workload-wizard";set
      $workloadId "mx4rv0k";set $orgId "g29xn20";set $partnerId "rx28oml";
    rafay.dev/dns: 'true'
  name: mx4rv0k-new-workload-wizard-acr-http
  namespace: new-ns
spec:
  rules:
  - host: new-workload-wizard-acr.run.stage.rafay-edge.net
    http:
      paths:
      - backend:
          service:
            name: new-deploy
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - new-workload-wizard-acr.run.stage.rafay-edge.net
    secretName: mx4rv0k-new-worklo-4145937496-ingress
