apiVersion: v1
data:
  WORKLOAD_ID: ko87dym
kind: ConfigMap
metadata:
  labels:
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: ko87dym
  name: ko87dym-test-conta-2050257049
  namespace: vault-ns

---
apiVersion: v1
data: {}
kind: Secret
metadata:
  annotations:
    rafay.dev/secretstore: rkms-secrets
  labels:
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: ko87dym
  name: ko87dym-test-conta-2050257049
  namespace: vault-ns

---
apiVersion: v1
data:
  tls.crt: 
  tls.key: c2VjcmV0c3RvcmU6cmttczpWd0pXd2ZKQTFoTUNpN3pVRjdqUjlGTjhJRyswUEd3bS9YUFExWTBzOS9IdG9xbDFidkhNdzVST3pFeGNrNEl5dVU4YS9jVWdlT0xadjVWdGU1dkJZTWpvVHdVM0lXQlY2VnhNWXlhZjZQeVdwRzEza3B6SWt4aitXdHU4eFY2SUdjT3VZYnM3TGUxTTJuSzFmQnpFV0hBcEQ3UmFYcjJHaXhmcTY4UHh3Y0hlR3EzRW9Zb3dOZStsYWlMYkRKcjd4TGVxaTNiTlI1YXI1ajhMRjZoY2UyTERwK2xYZVBxbFdNeVhJRU9IYnFWRmxIZEJmMURsODMyWk5CMVBJNDgrRkdMR20zNnZUS0xIdGl0RHlINUVVRWxFZWtmRkpEdEN4K0FsY1VidlFDc1Y0bE53QzNVaVFTUnV1TWRFRjhhMHpUM09nNWd2RWhaMmNCNFJvQWtPUXdnR1o0alFHcVlDR1JZNlROcHhBQSticFNzMXhPNVZoZUlETmNtNnVraDZtY3UxVWk3M1IzOXRmMEFFckdud05qVXBtTWpUYk9mZmpSL2F3NEdhWTFvVHQzdDJkYXhRaG92TmtzODdvc3htTnAwaTZSQ3IzNEcrbHNZc3UzWXY1YTFvR1lobHA2V0VSdlNaUUFETzdLWmMzb1BMTjZ5R2hvZUU5clpnNnY0cVE3ZGJMSUNOYTJVRHE2dzV1UTV4dzVYV01JcWFDa1FhYVZwZHVHcTh2NVV6ODhneUNMY0JIdHpQOTc5MHNtVFIzS3NEQkdUMFpScHB0YnZyV21lVEE4UGlvL0xESC9pa0wxRml5RUd2dmdJV1dtZmRaTFRWWFhpSGVEM2JoQ0VhQkRZcGcxTVhrQnZXdmZjOGpXVE5neERhS0xXaU9Ra2x6ZHR3WEUvTGt0bkxCeU5CU0dTZkpCVW9FRTVsZUNJMlpteWZyTkw4R3ZtL3VZWVd3ZFlweXUvRmFmTEVlZ29EUkNSSTNFVVpiUHhpaThpZlJvRmtJVmtFUjNvcld3ME1jdENCRG9DZmdxRE00K01ueFhCcXdpTmpVdG5EeDByWC9ncC9NSGpyTFdDdXlOK21NT1ZJNzlwbkdqOG5wSVJKSFRuM3JJT0Y3QWM4eXB0SUM5VUNEYlFwdmY1MFN1YnBObDhZalhOVm92WGVWOEthN3FwbjhsSXNINTd1QTd5a3RGcFcvM1N0MjluRW5nUDFRaGpsL2x5T3E5amgvbDBvdkE3T3ZlZlBDRFJLbEF6TWZxSitnQTNuWnpJNzQvekdSNjVtSmdHdExGTkg4WllGSEN6eGNkR3VlV0JZY0g3QmxFcTBicThpQUlnbGlkUnpkN1ExWURxaHJlOUZ5bXdZN2psbk5rcUtZaVIwZmZhVko2Wm5VMlBocTV3VURRNnBUMnZMUStMc3g3TDJwbW8ybnlOaVR6bVN5UDQ5RVBBMFhObTN4VVg1OTgydzBUcG5OTGdMY1hselRrZTJ1OUtGbnQ5cTdhVWxrWnptb0IyZlVoQlhBZ3V4cWIwL01temFySFZDZ2hnTEpLWHpVUGJaemN2SGc4T0V1V2xZa3kzNnBRcXRKVUJtSnVEWUpWdHRkL1RJV0VqYnMzVVJVY0xUMHdhUXVlMEdLWlRqNldsdkI3SXlqamgwdC9vQ1pwTmNrdUtiQXh2Tm1Ba3BpdW83blhGUDFVTnJidFZYZDJ3TlRELzNHOXJPRUhNeVhGUmN4QVhmNHdXN29zeTdIMzltbkJod3FBVjdOdnNlWlUwSklCR1NaQU5JcVpKV2tDQ2RHcXhvUjN4U3FneHZWT0tmQzVpL3JIbWJvdXl4NWNBa0xzSVM2RHB0MlpyMEdzYUZNSEg3VW9tSTgzMXU2Zm84bkMrSWNPbG9pQ1lUbXhWeExYaEI5YWRDL1ljVVdFZUhuZHBMSjlyOGlUVlRTaG80Y3I1aUxvVDd2SHVtbFFCNlpTd2pUelVzUHhUdVk4elZiVTVoZ2RpYUxSTWtwTmUrVEpMVytUalhmTXpLdnZESGpVanhsUWR4elJWYmZTMk9VQzhMQ0cwSEhHaXc4VE5lTDM0SW00VE1abml1bmk5dUhEVUZHVzdENDBnNzF4bjI2dHVqU1NsaGxWWm9INjBiRFpLenR1TitMcUtiVDhWOTN6Mk9WTXNhdlU3WmRrQnBzMWRSMk8vcGJzSkpEZUZhTFhGVDVZNDhuWXNkaE9yQnRkcXlpSG5oUmVUd202Q1JKYmh2YldLVkxHWWtKVjc4UEF1TGtqMW5haEx2NVA4Z2wxdTZSNGxjMWdZcVdJNGxmcmxWTktJNWxoRE5HdlZOQVZGMWNCckEyMmVYZ1FNUWdPWHVuK0Y2QWhCcjFtREF6WndJSHd6eUxNNjRKb3hFNWhKWW11ZlUrNjBhZWVqb2lwWFlHT0xUV3dXcVlFaEhHdWF6T3ZNa2JqMkJYclBtS3FsWVJsSGZxVHo4OHpOb1M5U1FXWi9VWjJRVHQwN2FKUUMyTHFpWnBFeld1S2RVNVhiMTBOVXNJQnhOSFZiZlhnZWNLREFBc0p1NEx6MVdyalFmMHlMUllmeXdobU1iWU1QVXcyUWVnSUhCb0tITTF4K0t3MnBLaWMwcTVBY0x2Vzg4eUxDdXJEdEhJSzR2MzZpV0lTVFNBbHF4eHdEMSs2enJzbkRjTk5CNWRIRUlXTktSSW9mWEx1cmoya3lWRUx5UTAxbUZYVWdibytNbUc5NHBDTkJwSlczVjM2TXE4aDFHdEMvenFSZEkyemlNeHowMWU1UnAwQ2l6M2dVMlRKb3BmWUltYytTQUNCL05jL3poaVRqS3ovZXBnODZtcDFoL0RzajVOTXpLamxpRFdERHdOcTBpbXNqa2lTd2pqbXYyU0hOQkFzejgyM2M1cjJDaXIvVzFwNWRaTDRmUFh3aFoxZytVZGxPZ3lneXRSQndINFJLbmhETVdDaVp3TS9zSkpQcFI2M3Jrdko4ek4zb014UWxMYUo5Q1NMbWRveFFDZXJMKzZWeTVPbWxUbVdDaFMzNEFaSHcvaVFaKy9QbHEvL1FONklXZW00QlhOdWJJUUdpdThGTEVQUzBpeit6S0w4S3gzV0pKVXdjSDBkZzhBR2JmNnQ4d00wREdIeGM2YkswZUZzZ3lDSDMyQ3R1ZGVkRVlLbm11KzFleGh0SGlKWmttWlVJOWRwc25mQ0pGQnk0K2xPNWcvdXZSZzQyZUQ4V1c3QlVqUnVsS0xnUnBIMVNySkVrb3RLMDMyQnYrU3NQYjFURnJBSHN1T0NHc0E4OGpvZDBCc1RkUm1BY3MyTWgzRjVCcU1YV0JiYlpHZFRSNUdicm91blZkcXR5OVJlTWFmWENrWGlLTHlzK0Zrb0NlNmtka2t6YjVGdU5aQlZtV2xqeGpNZmRsQVREVnUra21CbnBjUHNzbmtSenlBdldBUis4NHluUloyMXFYU0RNdHZHWHBrakNmU2VHc0x5LytUY2ExQjV2ck9PajBqYldQN2NCZUtvT1BUTkQxK2N4cE5XeDBkZk9ZZkp2anYvb2sxakxuV1FMVHdnakdwUXFMZTFvTkdPdFFoR2UyYVp0VUgxdFpOM3hJR0tqckhlajVLMWFpSlpQbXFxb285VXJUL0lEVCt2Q3lkMU10S2ZaRzBGNlp1UGliUzVpaFNjNkZJYjdxbHlKVWZSTDBwVnRNRkw5MDZpcmppUUc0Q3VxR3dFWGc4ZjF2bFRQMjdLT0J5SkVvYnRGL2V0dHdkbFBJMUcrMEhPTTd4NmFXVGxsTW9MN0xOOHZHZENBUHJFaVVqd2tkZGpJcFpQd05NcEVnbGZvM1ZXbjFCRUVqbzZYdkMzQW1lVEIzTVVxTy9oM2cwNTB4M1FmNnBqZVgrUWcxZzJkejRIVFMzTUlPYmdhaDdlWnNoa3gyeWsxaXlrKzRWb1NYMTNYbS92TXpNaytxSmdLeG1pNm5vaUpnNGhkUTE4VXM4ZjdURUhCTG12cWFrL0NSd2VaMDdjZktHNjdXVUNQZFpzbWhjYzMraEx1NVFlS2RHVGF5ZGdBTElpc2ZQZmpBVlNxTUxZREN3T0pQSXpVUHBuVEhuR21sS0VUV2lLdkpnUUluOE9SWng2Z29EaVNxekZnZmNFV2VETWFpcE9zaG1ERm1SVzBDOS84Sjg0ZWlDWjd2cEQra0dHeVNuRVM1NUxoSDZ3c0lwUDA1cVg3S29xSmxMeHd1STV0RGczb3RMYmF4YU5Ya1prMW5WL3p2enFEZXgwWU4ycUc0ZjRXY0czYlJ3NXNZT1hKYXVJME5BemVnbjkvMzdOSVNNUDZ5N1duTHo1aWprOXRUR2M2NWtBTldLMGwrcElPTFFiQWRNL1k1L2tNWjhXbTJULzZNUUJ6dExPMzM1T0tzb1hZalJxREQwbXFYTVFOOWlHeDJrbzEvMTZJSnppYVdDamZQd2dzay9TdGpnaWNzb2Y3cng4eitaZ0ZRc2pqWjRVd2pUUXhXd3IvK2wwS3EyQUkvbFZCVkVNY0EvbE1nODRwSVdsME5tQksvOFJJSlVEUW5sdm9iUHFmMWx6L1Y0dld4UHVNMlhjamtNTmJyeFdGSXJBQUd5WUVxT2k4azQwY01HajhzcWZzbFhVTy9MUTB4MktjeEVSNW40WnlHSjQzYU1GZVFXMm9zL0dUdHZxYWd3V1B1UUF6V2VyR3lnVzcxcHl0d243dE0ycUovZmdYYVdlZjZmNWNScjZmYmtqcjBMRGYzenJTQ3BXckF1M3lEZlhDVWJmWnhWODQ0WkZIV1RRZVJvdDhIQlRrRG1ISWJTbGlnTk84ZlBiTi9uTzk2eERsSVNJOGF5WVNxSXZmSE1vUjIwanhRNHljUzBqVzNwSXh2ZGxiR2dYUlJBdmZvZUFzUVJGRjFXUWV2eHdpMVBXKzJ5aW44cmh5ZE5qR1BPMFJ6TUw1SEtXS2hXMERDRU53bVJmbGhUTitSeTV5TUtBU1JBUmt3OGdXZDNqN1dscHRxMHFGVnBuc0NDNnIyZHMxcGc1SHRUTUxtWkxXQlRrTnhuMVpHM2xldkZDUThPTjlqbWFmbExteUQwYiszbzEyVEROTlpabUJEb1lhcEJXc3A3Rlc4UTIvWGZLT0xZOHFUdUVqemtHT2RFL2ZSVVJvVFRISFV0Z3pZWmorV1U3L1VIeUJpQUFqVjhGVzBOVU5pc0diWTVBWEJMSXF6dXVWQit2MzhqY21JSXE0YnJra2k3RHV3aW1zU3Mva2x5RjJtaEwwQk5KOSt2NDdlbnRWQm81VTZrbDlFUGtsNUNWRVQwaWVUQWlqVHJjamxaM2pvZFJ1RFFTS1REczdSdFFTczhyUysyK25pVDBqTmw3dW9uM0daalBzSjByTkJBbkZDSFNNQi9IaHJlN0huZVM2Z0ZCQjVsclFrUnJEVmVwZTA4Z1lKdE9OMENFZlNSV0VSZDNmMjFETjRvd1lRUERWQVFicWV2MmUxaEU5Z2VtV1FtK01KbGtXR0FaZDFHdFB0amlaK3BYWHhKYy9qelpSbm5jbSs0SDFpU2xvTno2WDA2bjJCajVlM2FPSnpSLzM2WDZpKzIrMzJhRU9GNDA4ckJoRno5a1FlcFdRUUp0dDFwZkVCZHMzdkk0bStReUZxMFhKTzhCOXpiUitmNnltYUdzMEo1ZmFMQVpOSHNHOWtnVVZtZXFZRVAxcGNtZXJCcXNBV0RYS3U4a3VzcEJiVXdPdkZwejFyQkdlbndnZ0RzOVRIWXdaOGdCbTJoQ2duaklZa2xiZEphemI5d3cwUHhQaytFT3ArSHAzTlBiQUpXUkNHbEE9PQ==
kind: Secret
metadata:
  annotations:
    rafay.dev/secretstore: rkms-secrets
  labels:
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: ko87dym
  name: ko87dym-testing-va-4201258534-ingress
  namespace: vault-ns
type: kubernetes.io/tls

---
apiVersion: v1
kind: Service
metadata:
  labels:
    rep-container: ko87dym-test-container-env
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: ko87dym
  name: test-container-env
  namespace: vault-ns
spec:
  ports:
  - name: port-80-tcp
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    rep-app: test-container-env
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    rafay.dev/registry-2d93dlk: system-default-registry
  labels:
    rep-app: test-container-env
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-workload: ko87dym
  name: test-container-env
  namespace: vault-ns
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 300
  selector:
    matchLabels:
      rep-app: test-container-env
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        rafay.dev/secretstore: vault
        vault.secretstore.rafay.dev/role: default
      labels:
        rep-app: test-container-env
        rep-organization: g29xn20
        rep-partner: rx28oml
        rep-workload: ko87dym
    spec:
      containers:
      - args: []
        command: []
        env:
        - name: MYSQL_USERNAME
          value: secretstore:vault:kv/data/myapp#data.githubtoken
        envFrom: []
        image: rcr.stage.rafay-edge.net/rafaycommunity/rafaycommunityuser/testapp:v2.0
        imagePullPolicy: IfNotPresent
        name: test-container-env
        ports:
        - containerPort: 80
          name: port-80-tcp
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 1024Mi
          requests:
            cpu: 237m
            memory: 972Mi
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      tolerations: []

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    rep-organization: g29xn20
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: ko87dym
  name: test-container-env
  namespace: vault-ns
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: test-container-env

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/configuration-snippet: set $workload_name "vault-access-wz-env";set
      $workloadId "ko87dym";set $orgId "g29xn20";set $partnerId "rx28oml";
    rafay.dev/dns: 'true'
    rafay.dev/kubeVersionConstraint: '>=1.19.0'
  name: ko87dym-testing-vault-env-wz-http
  namespace: vault-ns
spec:
  rules:
  - host: testing-vault-env-wz.run.stage.rafay-edge.net
    http:
      paths:
      - backend:
          service:
            name: test-container-env
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - testing-vault-env-wz.run.stage.rafay-edge.net
    secretName: ko87dym-testing-va-4201258534-ingress

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/configuration-snippet: set $workload_name "vault-access-wz-env";set
      $workloadId "ko87dym";set $orgId "g29xn20";set $partnerId "rx28oml";
    rafay.dev/dns: 'true'
    rafay.dev/kubeVersionConstraint: <1.19.0
  name: ko87dym-testing-vault-env-wz-http
  namespace: vault-ns
spec:
  rules:
  - host: testing-vault-env-wz.run.stage.rafay-edge.net
    http:
      paths:
      - backend:
          serviceName: test-container-env
          servicePort: 80
        path: /
  tls:
  - hosts:
    - testing-vault-env-wz.run.stage.rafay-edge.net
    secretName: ko87dym-testing-va-4201258534-ingress
