apiVersion: v1
data:
  tls.crt: 
  tls.key: c2VjcmV0c3RvcmU6cmttczo1TTNCVkoyRVBXL0tlZ09GVy9OTHA0ejNvWm5aQlRGMkxuclY5TGFSbFRBSEN5YmxGYlFaZitZVXdyaTRUR0t3NFJHTlh5YnhLWUd0VjRpTHVzaDBGOG9mbU1hWFJHTGwweHhhZUlPV3VvVVMwV2V2dllIWkhaRHRkbGFqTzFxZ1RrTUEwNE1SWDhYY1hRbUVUSWtvMnNYYzRwRE4zc3g2eUpYbjgwRmJuZFkzZE04clRNTjdvMStOeHVFd1JWdlVpZHE1YU1saE1DSVE2Q2N1aHRlbkVmWHpXL1hNREVRN1Q4SFRNbGRkaVprQzZBNkdPVHRmcU8wS3pIVExHTXdyUThUSzNKWENhZTBnSWQ2U3l2RGpZbnVYTmZ6dnZFVkMzSmw3TENqbWMrWlZCWnJWTWNDTTlGQzdRZWRtOEpyL1JMcXpsays1UStnbGdxU1p0Z3pYUXM4OHBoaC9UeWdyMzdvY3RBR3UwNVV4bEMzNmY2WmpuZng4SmRCSXNtOGlZZnF3QnAxbHlHOC9FemoyWm5yMGR5VG9uYUw3NjdmOHBQd09NTHZ4bDBlTVMycDFBZWNxa1JrUXpBbnM1K0lXYjZTY1VUNEtIejFmT3VPL2lwaS8wUUx1L2RYbFdEaDZQS042L1RuWGs1VGZXSm0vTHlqdENydkdyZzB1ZGlDNXdXUndXUDRmWDZodlBZSEl0M2dnR0xtQnFEUlA2eFAyK3EyRDVhR0ZweXAya0w2dmh2TmhWTnQ5eFBkaG9VTmRJa2xQR0xUQlB3TDhnT3NQZEptaFFPTnhRb2I5cmI4REdLSy9RbFBwUEx2OExKd1ZySmpSemdCWUlBbzhZSGo3UmRPZlRaSUE5Wlp1OW9DSDNYTXBiUnFDQ1huTWM1cllKMDg0ZTN4TFNkSm5XL1VrN3ViM0xlRmV0MVptUVU0TG94STEyM3l4eGtNV2F0UXg2cUVxQ2RhaTErR0FaeHVNYzljZzlKTXBqZFUrWE01QmlZd1JRUWdXSTNHMHo0Z2RhK3U1VENPNHU0U2gwbThkUjROZDRsSytKSEFmQ0YzaXlsMmFXdzE0VEU4QkY2Z0IvYTZZREJpbXdKc2p5alBlNzBGTURsMEJ2MVRhVmFmbUhwN01vYXQzUENFdktZZzZjUUVPc1hnSWxETTVWUWpLcHBDamF1SDdiOTFSZkRyK3RET1BvcVNmSi9mWUZDeFYrQW5SR3E1SlAwQ1hXei9zdHNtMm5TbkRtdXBKa09VUzBEWUVLQW5QR01WQUVYUHpqVHptN3pTbzBMVzRTZSs4Zy85dlpFVDREZkI5VGtMMndjWnFrZG92QkVUeEUxT2RDQk4vTGd2aWdUcTNTRXFvUlhhZlpEZS9rWkxlNHF1bElPTWcrM1h3N29IYVpjUnVKOFo0M2lTazh3cUNwd0hNZFpCa1RwbG5iUCtCL1ZOUGV5akRhUkVwd1dvNnlyY0xDM29IMDEzUExLL1UwdDRoQktPNVRtTFpFczNRc2RRVG9RK3ZHQzVabEY4Z3YyV00xalNOYm1oYlBHVDFwM0xUMUNLaWtSSVpobWFIYklKRVlTYVNWd1R6UUxSaFM5K1VBWUlEMTJRSDFCSm96WXcybnFuRGZjYVlWK3U1eUhnNFV5NTVQcloxQkJFemhOeUE2NG1WeHFUTXlmZ0dQY3gyWmRybUpuT0lGSEIwMFFEdWQyVHE1WWpEckNqQzV5aVdLWmc5cDdBVllXK0dMVEJmcFZiK0lMcnRIbThJakc5bzBocWt0OGh2enlrSTZERzVsWmMyMzZXZTJ0Mk5FUE54cm1Fc09aYThNMktOZVFUN1ZwQ1k3R3JaK2N4NGIyalpHN2htOHdkTVVXL3pZbnczUFcva1JZaDJLeGxkZHdYNDJEa1pRSm10S1QzL3RQL2tCTVZyZFpkaFdYSkROVERwUWtLM2ZLckFqMG9rU1ROb0daRFE3RkxITmFvMFRlYU0vR2JMRDZvdW9RMkNEUUs5VWlRUUdoMktCQlNwYnYvMk5xWFFSdFcrdWpQZ1c2WnpxTnJRUWxXT1U5RFkwZTBUd2I0N3Raand3VjREdUdYSDAvbzlWazZheW03MWIvVUtrNGsvWWVEaDltNjdrUDRIcWh6bitDSjdEb1poVm9MQWhsSUJJZkx3N0Y4UmRDSGZQcE5WMkRpeE54dC9oRXQ3U1Z3a0FXVzM4OEd0K2xjeXF6MkZLdWdHeERVdUlySUtxVkNBb1IrWHRabU43eWRxQWo1b2N5b2xGZFJ2VVpML3J2a3ZRM0N3bk5rZVU0Wlg5a0I1UjltTWh4MDl2TjQxaWtJV3luUGlqOEg5cGdhb2JoWnZ6bndzbXQxL1RQM2tDUitsWDkxY1N2NndIbjRrMm9VMHNPbzlRTVRLRFdjNXVjR1BhaVV0dVNlZVpXaWUwWTBiWmt0NUR5d2hqb1VxOTNMRW81NEtkeGZnbzVrRkhFQXpiZ2ZJc0RDU0hwVlFua09RQmVFdStZOGtNSnkrUWZKdng3MDZiOG5Zc0s3NHo3M1VWdC95VC9WbHB0L05SNzBZbktXSGhwam16bEdyMDJVQ05hdmpzbXZ2dzgrTEFWSlhobnpKSUxSQjlMQ2UzS09SSlRqcTJFR3IwTnJCZG82TmdOMmdwNnRsNGRaK2Y2Q04wendpTGVPNDVEcjRqL2p4NWtaOUswNGFIRnphcDNiMDVtckJJTVFod0lqcTJLanArYUtPcEdTNmtkV1Z6L0szcVh0VktpaTQycVJvRWdGdmo3NGtnalRSNGVqRStSbzNQS3JCeTV3OFpVNUpEa0t5NjZTck0rZURiR3d6WGxVdzgzU3hnMFNsQUhmNDF6OVdFV25kQ0NWRnpLaVZJNUc2dzI3RmVqK0NxQWhtMU9Da0dVUVdSM29CcVlHL0ZGbGExNElCZFQwTVhuSXZIazIvNWdQelFlR202aE1JN3JQc24vcEFZY2gyUkdMRTVoRmdDTHRWNjFDRlZCWWplWk5heU5CaU9GbWl1Mm8zU3pvY1QrUVNIejF1bUQ2T1RqTi9VeU5tTDFlUmM5V1dFblpMYnF6REtiVmFOOVJFcXN5eC9KUVR1TmttRjg1c2N4L1JGUkRZWGhaeXdKTnRENDVpR3FiSXhqaFEyQW42VWRSNzUyMnNkUUNMem9Pc0lkRTFvTjBydk1laEtLVFdRRkY5UXExNFRQZ09yMTRoTTF5c21aN295VmJQSTEzTDY4MjdGYllFbnpqSzZteDN1Qm9PQ2YxbnhhWTNsclEwYmgwaHQyMGNibVRNdC9jVko0cnpKTCtUamdXZTVIOWxmemgrR2YyMTJDZG9aWEhuOXFMUHpjcEJUVUZ2TWpKMVRWWlVDU2s4WVJJMngzT29nUWE5S0Z4WVNCM1hnQ2sweUwxc2hoVWJCMjBoME1RUjJLNlc3ditoZk9WV2NTY0h0S0FUZ0pWNGZyS1hDb0hPdi80RW1HYVFoOWRmRitUTTZSZTZ6MlRpUzAxbi8xYnBCblA1RnFVL0JpTzZkakNGOEQ3djhxc01qakpCU0E0YSsxMFFRWXhpMHpkSzZSRndJQWpnaGZSNmNLd1hBbE1vNGw0MHAvck1ka3llWHlXeGUrZFN6M1lnb0FzOUJyNlhQUE41SFVUUVZjSEdNVzIwclcvOVNFZS9IWmJwQ3NGRGVjOUFGT2tMQ2lHWFdxOC9MQW1pMG5URkNueWN1bmtkNEl0ZlFoNzhobmlVS2ZMbGs2VGlJMlRIaVN3N2kydk9FOWFqcDdiUk50THIvczJtV3F6a2hDMlIyQ001N3R0MlErTVBjbTV2WHhZaG9qV2gyOGhNN1kzMisvcHBLbDVBU0E0bTVQS0JmVDZzMHppMmZCczRnL0h4YS9lNlY5bCtJS3BmSGhRUjJrc3ZPdEFFR3BVRmhjL0pwOEgwL0pOeFB1Q1pNem83dFNMTEM0ejJSdzIxYUJVblpLb1RsdmxaQzJ3YWRDaGN4Sm83WEtUVmdVTDgwMWtERlh0bmRPNjdPUnJvTEpqUlAwMDBvRjFBY0RWcE5PTTFsVFZZSzRoMG8yelFxT2toQTFKWFpGa0tKRkgwZFBRcjlFSHFPQmpZYXNEeEtuQmh2SkJESEV4V1VnQzFNUUlxY0F4Mlg1eWx1czJ4b2hFUDBHSWZ6cWRRZ3h2T0E2bWxoM2NBTllJQkcyMVlhSnI4aWlKOElCK3RRRzlhOGRwMXRWZW9JdHVTeTg3K1JzN0VqWVZMdWtKbGdTeWwyY2ZPL3RHVHc0d0xkeHJJd3l2cHNJaU5ReEhObWt3UGlxN1I3NDA2bGh0RnZiNEhBVktqWWhEK0ZrbGF2VUIva2Rha3JkbTB0Rld3OEY4Z2lwRTEwVmcvSlArUDBrVE9IQ2R5eEgwUElNNzdka2VZMGlqLys4bHcyZzdQZFhlSjh6UWY2OThxT0EwNVY2c1hodVlqMlZGbG1rdGtuZ2l3NTczc01YbmhpNTQxNHJSNC8vRkIwbHN0T2FvK1F1aHRzWkdBY3pKaTBGZHpuOXNReXN3L1NIdVhWa01GRGJyQ1lBMmZ1a1BSUWl0RXpqdmZVMThwdFhTVmdYVktJTlU1K3pqdGdxN0hqQnVXWnowS1RnUUhFbWVxT2FXL2g5cHpKRHcvVUFWTGJFdTVPNEN6RTM5NWhNOTM1dkNZTzNJcU5GOVBYZndhYSthMDN5WkI5V29JUWFhWHF5N0Q5Uy9WUkt3b0Y0SWludk93Sy9WOE5HSTRYSDI3ZFhXeThJS2RVdUVWYWVqRmd5TkpyRUUxMTdRYTBDbUt2eDVBSEtjZHhUeGIxNFk3ekJ5cmdBNDY4V2I3d0FWNnV1VGRnRFl5WDNlVFo5aDI4Z1dITVVBZ1hOaFEzbUNmcjZaSjlka2kyc2ZQOEZmTERZYnFnTEJISUdURFBmSGszMXJrbjNvWmJWTFpOcUVGQWFLcGVNa1JtaHU2S0VpQlBoTmFEZlA5dkU3WTNVT0FlTkFTQ0JJR0hHOE9BZERaV0QvbFpNcXI3alE4Slpnak5SZnJTQVUzNVljOFR0R3lRWFRmVnV3L3JhR3BpRHFaUmVFaERYYy8ycllpbTNSaFBwcloxSzI2UkF3aEhCVEtLVGV3Ni9XbFlUL2JndnhVWHplditjb2U5SkljRlNMeldjMjdoMWY0bFhHOFNsT0hTV2JpMHdlbGovSzJWVHJ3US9BN2R3ZjczdHlMbUNoZmcxMG0vcTFxdjh1UVVjaWw3Q0xqTzBmNHRVdFRMODBUOFJDY0haQ1JkZXZnaTdidGlQL0JCZ013RzFsazZOUlJ3OXBpSUVzSUZHcmxyTWN4SHhzNjJKaFVkR0gvRlE5MVBkejlCL1BaK3FvQ3VTQUNLYzhsY01wSE5VUGFVSnhyd3BOMjJyM3piRGcxS3duclh4TG8xSVJvU2YxZUVORU9RT1lHZ21nRnNGc0szNW54c2cyRTFrSVlDZC9ZTGFkUmI3RXM4NkVOdDZ4QXdBSTZ3RFljVWFlTnp4cUFuTGltaWYxNVNXZXgwS2pjTk9kZ3Y1M0JRRVNBQjRpZzEycFRrcmlYUHVKd1pzWWNVNDNuOG9iNGlUUyt1bm0rTXpKTkRUdDR3Yk0rdUNlS0RqemRaaW9Rd1B6TXhGWkdkcThHaDFwMHh4alJDWDhvbzJESk9uUkhUelkrUHFIMmtpdWlXYVVCQ2tKSGJtTWpPWmdKcGtVdHBTNk0yNndrNU42M3RSemNLdzZrVFRQM0dHWnRjMUpVakJxR2NHR0FaYVdKakdFSlU1ZlpLdER4SExKemZOalQ4V0p6Mnc9PQ==
kind: Secret
metadata:
  annotations:
    rafay.dev/secretstore: rkms-secrets
  labels:
    rep-organization: 7w2lnkp
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: 1ky8342
  name: 1ky8342-acr-regist-1997665299-ingress
  namespace: new-ns
type: kubernetes.io/tls

---
apiVersion: v1
kind: Service
metadata:
  labels:
    rep-container: 1ky8342-new-deploy
    rep-organization: 7w2lnkp
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: 1ky8342
  name: new-deploy
  namespace: new-ns
spec:
  ports:
  - name: port-80-tcp
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    rep-app: new-deploy
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    rafay.dev/registry-pkv1jek: gajanan-acr
  labels:
    rep-app: new-deploy
    rep-organization: 7w2lnkp
    rep-partner: rx28oml
    rep-workload: 1ky8342
  name: new-deploy
  namespace: new-ns
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 300
  selector:
    matchLabels:
      rep-app: new-deploy
  strategy:
    type: Recreate
  template:
    metadata:
      annotations: {}
      labels:
        rep-app: new-deploy
        rep-organization: 7w2lnkp
        rep-partner: rx28oml
        rep-workload: 1ky8342
    spec:
      containers:
      - args: []
        command: []
        env: []
        envFrom: []
        image: gajanantest.azurecr.io/hello-openshift:latest
        imagePullPolicy: IfNotPresent
        name: new-deploy
        ports:
        - containerPort: 80
          name: port-80-tcp
          protocol: TCP
        resources:
          limits:
            cpu: 250m
            memory: 1024Mi
          requests:
            cpu: 237m
            memory: 972Mi
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      tolerations: []

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  labels:
    rep-organization: 7w2lnkp
    rep-partner: rx28oml
    rep-version: rx28oml
    rep-workload: 1ky8342
  name: new-deploy
  namespace: new-ns
spec:
  maxReplicas: 1
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 80
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: new-deploy

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/configuration-snippet: set $workload_name "acr-workload-wizard";set
      $workloadId "1ky8342";set $orgId "7w2lnkp";set $partnerId "rx28oml";
    rafay.dev/dns: 'true'
  name: 1ky8342-acr-registry-workload-http
  namespace: new-ns
spec:
  rules:
  - host: acr-registry-workload.run.dev.rafay-edge.net
    http:
      paths:
      - backend:
          service:
            name: new-deploy
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - acr-registry-workload.run.dev.rafay-edge.net
    secretName: 1ky8342-acr-regist-1997665299-ingress
